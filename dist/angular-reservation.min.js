!function(){angular.module("hm.reservation",["ui.bootstrap","pascalprecht.translate","ngMessages"])}(),function(){function e(){var e={getAvailableDatesFromAPI:!1,getAvailableDatesAPIUrl:"http://localhost:8080/availableDates",getAvailableHoursAPIUrl:"http://localhost:8080/availableHours",reserveAPIUrl:"http://localhost:8080/reserve",dateFormat:"yyyy-MM-dd",language:"en",showConfirmationModal:!0,datepickerTemplate:"datepicker.html",availableHoursTemplate:"availableHours.html",noAvailableHoursTemplate:"noAvailableHours.html",clientFormTemplate:"clientForm.html",confirmationModalTemplate:"confirmationModal.html"};return{$get:function(){return e},set:function(r){angular.extend(e,r)}}}angular.module("hm.reservation").provider("reservationConfig",[e])}(),function(){function e(e,r,n,a,t,s){function o(){v.loader=!0,a.getAvailableDates().then(function(){v.loader=!1;var e=v.availableDatesStatus=a.status,r=v.availableDatesMessage=a.message;s.onCompletedGetAvailableDates(e,r),"SUCCESS"==e?(v.availableDates=a.availableDates,s.onSuccessfulGetAvailableDates(e,r,v.availableDates),v.availableDates.length>0&&(v.selectedDate=new Date(v.availableDates[0]))):s.onErrorGetAvailableDates(e,r)})}function i(e){return v.availableDates.indexOf(e.toISOString().substr(0,10))!==-1}function l(e){var r=e.date,n=e.mode;return"day"===n&&!i(r)}function c(e){s.onBeforeGetAvailableHours(e).then(function(){d(e)},function(){console.log("onBeforeGetAvailableHours: Rejected promise")})}function d(e){var n=r("date")(e,v.dateFormat),t={selectedDate:n};a.getAvailableHours(t).then(function(){v.loader=!1;var r=v.availableHoursStatus=a.status,n=v.availableHoursMessage=a.message;s.onCompletedGetAvailableHours(r,n,e),"SUCCESS"==r?(v.availableHours=a.availableHours,s.onSuccessfulGetAvailableHours(r,n,e,v.availableHours)):s.onErrorGetAvailableHours(r,n,e)})}function u(e,r,n){s.onBeforeReserve(e,r,n).then(function(){m(e,r,n)},function(){console.log("onBeforeReserve: Rejected promise")})}function m(e,n,t){v.loader=!0;var o=r("date")(e,v.dateFormat),i={selectedDate:o,selectedHour:n,userData:t};a.reserve(i).then(function(){v.loader=!1;var r=v.reservationStatus=a.status,o=v.reservationMessage=a.message;s.onCompletedReserve(r,o,e,n,t),"SUCCESS"==r?s.onSuccessfulReserve(r,o,e,n,t):s.onErrorReserve(r,o,e,n,t)})}var v=this;v.selectedTab=0,v.secondTabLocked=!0,v.thirdTabLocked=!0,v.selectedDate=new Date,v.selectedHour="",v.userData={},v.loader=!1,v.getAvailableDatesFromAPI=t.getAvailableDatesFromAPI,v.dateFormat=t.dateFormat,v.datepickerTemplate=t.datepickerTemplate,v.availableHoursTemplate=t.availableHoursTemplate,v.noAvailableHoursTemplate=t.noAvailableHoursTemplate,v.clientFormTemplate=t.clientFormTemplate,v.datepickerOptions=e.datepickerOptions||{},n.use(t.language),v.getAvailableDatesFromAPI&&(v.availableDates=[],o(),v.datepickerOptions.dateDisabled=l),v.onSelectDate=function(e){v.selectedDate=e,v.secondTabLocked=!1,v.selectedTab=1,c(e),v.loader=!0},v.selectHour=function(e){v.thirdTabLocked=!1,v.selectedHour=e,v.selectedTab=2},v.reserve=function(e,r,n){u(e,r,n)}}angular.module("hm.reservation").controller("ReservationCtrl",["$scope","$filter","$translate","reservationAPIFactory","reservationConfig","reservationService",e])}(),function(){angular.module("hm.reservation").directive("reservation",[function(){return{restrict:"E",scope:{datepickerOptions:"="},controller:"ReservationCtrl",controllerAs:"reservationCtrl",templateUrl:"index.html"}}])}(),function(){function e(e,r){function n(){o.status="",o.message="",o.availableHours=""}function a(e){e.hasOwnProperty("status")||console.error("Get available hours response should have a 'status' key"),e.hasOwnProperty("message")||console.error("Get available hours response should have a 'message' key"),e.hasOwnProperty("availableDates")||console.error("Get available hours response should have a 'availableDates' key")}function t(e){e.hasOwnProperty("status")||console.error("Get available hours response should have a 'status' key"),e.hasOwnProperty("message")||console.error("Get available hours response should have a 'message' key"),e.hasOwnProperty("availableHours")||console.error("Get available hours response should have a 'availableHours' key")}function s(e){e.hasOwnProperty("status")||console.error("Reserve response should have a 'status' key"),e.hasOwnProperty("message")||console.error("Reserve response should have a 'message' key")}var o={};return o.status="",o.message="",o.availableHours=[],o.availableDates=[],o.getAvailableDates=function(){return e({method:"GET",url:r.getAvailableDatesAPIUrl,responseType:"json"}).then(function(e){console.log(e.data),a(e.data),o.status=e.data.status,o.message=e.data.message,o.availableDates=e.data.availableDates},function(e){o.errorManagement(e.status)})},o.getAvailableHours=function(n){return e({method:"GET",params:n,url:r.getAvailableHoursAPIUrl,responseType:"json"}).then(function(e){console.log(e.data),t(e.data),o.status=e.data.status,o.message=e.data.message,o.availableHours=e.data.availableHours},function(e){o.errorManagement(e.status)})},o.reserve=function(n){return e({method:"POST",data:n,url:r.reserveAPIUrl,responseType:"json"}).then(function(e){console.log(e.data),s(e.data),o.status=e.data.status,o.message=e.data.message},function(e){o.errorManagement(e.status)})},o.errorManagement=function(e){switch(n(),e){case 500:o.status="SERVER_ERROR";break;default:o.status="CONNECTION_ERROR"}},o}angular.module("hm.reservation").factory("reservationAPIFactory",["$http","reservationConfig",e])}(),function(){function e(e,r,n,a){function t(e,t,o,i){var l=n.open({templateUrl:a.confirmationModalTemplate,size:"sm",controller:["selectedDate","selectedHour","userData",s],controllerAs:"confirmationModalCtrl",resolve:{selectedDate:function(){return r("date")(t,a.dateFormat)},selectedHour:function(){return o},userData:function(){return i}}});l.result.then(function(){console.log("Accepted"),e.resolve()},function(){console.log("Cancelled"),e.reject()})}function s(e,r,n){var a=this;a.selectedDate=e,a.selectedHour=r,a.userData=n,a.translationParams={name:n.name,selectedDate:e,selectedHour:r}}this.onCompletedGetAvailableDates=function(e,r){console.log("Executing completed get available dates callback")},this.onSuccessfulGetAvailableDates=function(e,r,n){console.log("Executing successful get available dates callback")},this.onErrorGetAvailableDates=function(e,r){console.log("Executing error get available dates callback")},this.onBeforeGetAvailableHours=function(r){console.log("Executing before get available hours callback");var n=e.defer();return n.resolve(),n.promise},this.onCompletedGetAvailableHours=function(e,r,n){console.log("Executing completed get available hours callback")},this.onSuccessfulGetAvailableHours=function(e,r,n,a){console.log("Executing successful get available hours callback")},this.onErrorGetAvailableHours=function(e,r,n){console.log("Executing error get available hours callback")},this.onBeforeReserve=function(r,n,s){console.log("Executing before reserve callback");var o=e.defer();return a.showConfirmationModal?t(o,r,n,s):o.resolve(),o.promise},this.onCompletedReserve=function(e,r,n,a,t){console.log("Executing completed reserve callback")},this.onSuccessfulReserve=function(e,r,n,a,t){console.log("Executing successful reserve callback")},this.onErrorReserve=function(e,r,n,a,t){console.log("Executing error reserve callback")}}angular.module("hm.reservation").service("reservationService",["$q","$filter","$uibModal","reservationConfig",e])}(),function(){"use strict";angular.module("hm.reservation").config(["$translateProvider",function(e){e.translations("en",{date:"Date",time:"Time",client:"Client",name:"Name",save:"Save",cancel:"Cancel",select:"Select",phone:"Phone",email:"Email",required:"This field is required",minLength:"Minimum length of {{minLength}} is required",maxLength:"Maximum length of {{maxLength}} is required",invalidCharacters:"Not allowed characters",invalidPhone:"Invalid phone number",invalidEmail:"Invalid email address",reserve:"Reserve",confirmOK:"Yes, reserve",confirmCancel:"No, cancel",confirmTitle:"Confirm reservation",confirmText:"{{name}}, Are you sure you want to reserve date {{selectedDate}} at {{selectedHour}}?.",noAvailableHours:"There are not available hours for selected date, please select another date"}),e.translations("es",{date:"Fecha",time:"Hora",client:"Cliente",name:"Nombre",save:"Guardar",cancel:"Cancelar",select:"Seleccionar",phone:"Teléfono",email:"Email",required:"Este campo no puede estar vacío",minLength:"El número mínimo de carácteres es {{minLength}}",maxLength:"El número máximo de carácteres es {{maxLength}}",invalidCharacters:"Caracteres no permitidos",invalidPhone:"Número de teléfono no válido",invalidEmail:"Email no válido",reserve:"Reservar",confirmOK:"Sí, reservar",confirmCancel:"No, cancelar",confirmTitle:"Confirmar reserva",confirmText:"{{name}}, ¿Estás seguro de que deseas reservar el día {{selectedDate}} a las {{selectedHour}}?.",noAvailableHours:"No hay horas disponibles para la fecha seleccionada, por favor selecciona otra fecha"}),e.registerAvailableLanguageKeys(["es","en"],{"es_*":"es","en_*":"en"}),e.determinePreferredLanguage(),e.useSanitizeValueStrategy("escaped")}])}(),angular.module("hm.reservation").run(["$templateCache",function(e){e.put("availableHours.html",'<a class="list-group-item" href="" ng-repeat="item in reservationCtrl.availableHours" ng-click="reservationCtrl.selectHour(item)"\r\n   ng-class="{\'angular-reservation-selected\': reservationCtrl.selectedHour == item}">\r\n    <span>{{item}}</span>\r\n</a>'),e.put("clientForm.html",'<div class="col-md-12 angular-reservation-clientForm">\r\n    <div class="form-group col-md-12">\r\n        <label class="col-md-3 control-label" for="name">{{"name" | translate}}</label>\r\n        <div class="col-md-9">\r\n            <div class="input-group">\r\n            <span class="input-group-addon">\r\n                <span class="glyphicon glyphicon-user" aria-hidden="true" style="font-size: 14px"></span>\r\n            </span>\r\n\r\n                <input id="name" name="name" class="form-control" placeholder="{{\'name\' | translate}}" type="text" ng-model="reservationCtrl.userData.name"\r\n                       autofocus="true" ng-pattern="/^[\\w\\s\\-\\x7f-\\xff]*$/" ng-minlength="2" ng-maxlength="100" required>\r\n            </div>\r\n\r\n            <div class="help-block" ng-messages="reserveForm.name.$error" ng-if="reserveForm.$submitted">\r\n                <p ng-message="minlength" class="text-danger">{{"minLength" | translate: \'{minLength: "2"}\'}}</p>\r\n                <p ng-message="maxlength" class="text-danger">{{"maxLength" | translate: \'{maxLength: "100"}\'}}</p>\r\n                <p ng-message="pattern" class="text-danger">{{"invalidCharacters" | translate}}</p>\r\n                <p ng-message="required" class="text-danger">{{"required" | translate}}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="form-group col-md-12">\r\n        <label class="col-md-3 control-label" for="phone">{{"phone" | translate}}</label>\r\n        <div class="col-md-9">\r\n            <div class="input-group">\r\n            <span class="input-group-addon">\r\n                <span class="glyphicon glyphicon-earphone" aria-hidden="true" style="font-size: 14px"></span>\r\n            </span>\r\n\r\n                <input id="phone" name="phone" class="form-control" placeholder="{{\'phone\' | translate}}" type="tel" ng-model="reservationCtrl.userData.phone"\r\n                       ng-pattern="/^[0-9]*$/" ng-minlength="5" ng-maxlength="15" required>\r\n            </div>\r\n\r\n            <div class="help-block" ng-messages="reserveForm.phone.$error" ng-if="reserveForm.$submitted">\r\n                <p ng-message="minlength" class="text-danger">{{"minLength" | translate: \'{minLength: "5"}\'}}</p>\r\n                <p ng-message="maxlength" class="text-danger">{{"maxLength" | translate: \'{maxLength: "15"}\'}}</p>\r\n                <p ng-message="pattern" class="text-danger">{{"invalidPhone" | translate}}</p>\r\n                <p ng-message="required" class="text-danger">{{"required" | translate}}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="form-group col-md-12">\r\n        <label class="col-md-3 control-label" for="email">{{"email" | translate}}</label>\r\n        <div class="col-md-9">\r\n            <div class="input-group">\r\n            <span class="input-group-addon">\r\n                <span class="glyphicon glyphicon-envelope" aria-hidden="true" style="font-size: 14px"></span>\r\n            </span>\r\n\r\n                <input id="email" name="email" class="form-control" placeholder="{{\'email\' | translate}}" type="text" ng-model="reservationCtrl.userData.email"\r\n                       ng-pattern="/[\\w|.|-]*@\\w*\\.[\\w|.]*/" required>\r\n            </div>\r\n\r\n            <div class="help-block" ng-messages="reserveForm.email.$error" ng-if="reserveForm.$submitted">\r\n                <p ng-message="pattern" class="text-danger">{{"invalidEmail" | translate}}</p>\r\n                <p ng-message="required" class="text-danger">{{"required" | translate}}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="col-md-12">\r\n        <button id="reserve" type="submit" name="reserve" class="btn btn-success pull-right">{{"reserve" | translate}}</button>\r\n    </div>\r\n\r\n    <div class="col-md-12">\r\n        <div uib-alert class="alert-success text-center" ng-if="reservationCtrl.reservationStatus == \'SUCCESS\'" style="margin-top: 1em">\r\n            <span>Success!</span>\r\n            <p ng-if="reservationCtrl.reservationMessage">{{reservationCtrl.reservationMessage}}</p>\r\n        </div>\r\n\r\n        <div uib-alert class="alertt-danger text-center" ng-if="reservationCtrl.reservationStatus == \'ERROR\'" style="margin-top: 1em">\r\n            <span>Error!</span>\r\n            <p ng-if="reservationCtrl.reservationMessage">{{reservationCtrl.reservationMessage}}</p>\r\n        </div>\r\n    </div>\r\n</div>'),e.put("confirmationModal.html",'<div class="modal-header">\r\n    <h3 class="modal-title">{{"confirmTitle" | translate}}</h3>\r\n</div>\r\n\r\n<div class="modal-body">\r\n    <h5>{{"confirmText" | translate : confirmationModalCtrl.translationParams}}</h5>\r\n\r\n    <div ng-repeat="(key, value) in confirmationModalCtrl.userData track by $index">\r\n        <label class="control-label">{{key | translate}}</label>\r\n\r\n        <h5>{{value}}</h5>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal-footer">\r\n    <button class="btn btn-danger" type="button" ng-click="$dismiss()">{{"confirmCancel" | translate}}</button>\r\n    <button class="btn btn-success" type="button" ng-click="$close()">{{"confirmOK" | translate}}</button>\r\n</div>'),e.put("datepicker.html",'<div uib-datepicker class="angular-reservation-datepicker" ng-model="reservationCtrl.selectedDate" datepicker-options="reservationCtrl.datepickerOptions"\r\n     ng-change="reservationCtrl.onSelectDate(reservationCtrl.selectedDate)"></div>'),e.put("index.html",'<div class="angular-reservation-box">\r\n    <uib-tabset active="reservationCtrl.selectedTab" justified="true">\r\n        <uib-tab index="0">\r\n            <uib-tab-heading>\r\n                <span class="glyphicon glyphicon-calendar" aria-hidden="true" class="angular-reservation-icon-size"></span>\r\n                <h5 ng-if="reservationCtrl.secondTabLocked">{{"date" | translate}}</h5>\r\n                <h5 ng-if="!reservationCtrl.secondTabLocked">{{reservationCtrl.selectedDate | date: reservationCtrl.dateFormat}}</h5>\r\n            </uib-tab-heading>\r\n\r\n            <div ng-include="\'loader.html\'" class="text-center" style="min-height: 250px" ng-if="reservationCtrl.loader"></div>\r\n\r\n            <div ng-include="reservationCtrl.datepickerTemplate" ng-if="!reservationCtrl.loader"></div>\r\n        </uib-tab>\r\n\r\n        <uib-tab index="1" disable="reservationCtrl.secondTabLocked">\r\n            <uib-tab-heading>\r\n                <span class="glyphicon glyphicon-time" aria-hidden="true" class="angular-reservation-icon-size"></span>\r\n                <h5 ng-if="reservationCtrl.thirdTabLocked">{{"time" | translate}}</h5>\r\n                <h5 ng-if="!reservationCtrl.thirdTabLocked">{{reservationCtrl.selectedHour}}</h5>\r\n            </uib-tab-heading>\r\n\r\n            <div ng-include="\'loader.html\'" class="text-center" style="min-height: 250px" ng-if="reservationCtrl.loader"></div>\r\n\r\n            <div class="angular-reservation-availableHour" ng-if="!reservationCtrl.loader && reservationCtrl.availableHours.length > 0">\r\n                <div ng-include="reservationCtrl.availableHoursTemplate"></div>\r\n            </div>\r\n\r\n            <div ng-if="!reservationCtrl.loader && reservationCtrl.availableHours.length == 0">\r\n                <div ng-include="reservationCtrl.noAvailableHoursTemplate"></div>\r\n            </div>\r\n        </uib-tab>\r\n\r\n        <uib-tab index="2" disable="reservationCtrl.thirdTabLocked">\r\n            <uib-tab-heading>\r\n                <span class="glyphicon glyphicon-user" aria-hidden="true" class="angular-reservation-icon-size"></span>\r\n                <h5>{{"client" | translate}}</h5>\r\n            </uib-tab-heading>\r\n\r\n            <form class="form-horizontal" name="reserveForm" novalidate\r\n                  ng-submit="reserveForm.$valid && reservationCtrl.reserve(reservationCtrl.selectedDate, reservationCtrl.selectedHour, reservationCtrl.userData)">\r\n                <div ng-include="\'loader.html\'" class="text-center" style="min-height: 250px" ng-if="reservationCtrl.loader"></div>\r\n\r\n                <fieldset ng-if="!reservationCtrl.loader">\r\n                    <div ng-include="reservationCtrl.clientFormTemplate"></div>\r\n                </fieldset>\r\n            </form>\r\n        </uib-tab>\r\n    </uib-tabset>\r\n</div>\r\n'),e.put("loader.html",'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1" width="50px" height="50px" viewBox="0 0 28 28">\r\n    <!-- 28= RADIUS*2 + STROKEWIDTH -->\r\n\r\n    <title>Material design circular activity spinner with CSS3 animation</title>\r\n    <style type="text/css">\r\n        /**************************/\r\n        /* STYLES FOR THE SPINNER */\r\n        /**************************/\r\n\r\n        /*\r\n         * Constants:\r\n         *      RADIUS      = 12.5\r\n         *      STROKEWIDTH = 3\r\n         *      ARCSIZE     = 270 degrees (amount of circle the arc takes up)\r\n         *      ARCTIME     = 1333ms (time it takes to expand and contract arc)\r\n         *      ARCSTARTROT = 216 degrees (how much the start location of the arc\r\n         *                                should rotate each time, 216 gives us a\r\n         *                                5 pointed star shape (it\'s 360/5 * 2).\r\n         *                                For a 7 pointed star, we might do\r\n         *                                360/7 * 3 = 154.286)\r\n         *\r\n         *      SHRINK_TIME = 400ms\r\n         */\r\n\r\n        .qp-circular-loader {\r\n            width:28px;  /* 2*RADIUS + STROKEWIDTH */\r\n            height:28px; /* 2*RADIUS + STROKEWIDTH */\r\n        }\r\n        .qp-circular-loader-path {\r\n            stroke-dasharray: 58.9;  /* 2*RADIUS*PI * ARCSIZE/360 */\r\n            stroke-dashoffset: 58.9; /* 2*RADIUS*PI * ARCSIZE/360 */\r\n            /* hides things initially */\r\n        }\r\n\r\n        /* SVG elements seem to have a different default origin */\r\n        .qp-circular-loader, .qp-circular-loader * {\r\n            -webkit-transform-origin: 50% 50%;\r\n            -moz-transform-origin: 50% 50%;\r\n        }\r\n\r\n        /* Rotating the whole thing */\r\n        @-webkit-keyframes rotate {\r\n            from {-webkit-transform: rotate(0deg);}\r\n            to {-webkit-transform: rotate(360deg);}\r\n        }\r\n        @-moz-keyframes rotate {\r\n            from {-webkit-transform: rotate(0deg);}\r\n            to {-webkit-transform: rotate(360deg);}\r\n        }\r\n        .qp-circular-loader {\r\n            -webkit-animation-name: rotate;\r\n            -webkit-animation-duration: 1568.63ms; /* 360 * ARCTIME / (ARCSTARTROT + (360-ARCSIZE)) */\r\n            -webkit-animation-iteration-count: infinite;\r\n            -webkit-animation-timing-function: linear;\r\n            -moz-animation-name: rotate;\r\n            -moz-animation-duration: 1568.63ms; /* 360 * ARCTIME / (ARCSTARTROT + (360-ARCSIZE)) */\r\n            -moz-animation-iteration-count: infinite;\r\n            -moz-animation-timing-function: linear;\r\n        }\r\n\r\n        /* Filling and unfilling the arc */\r\n        @-webkit-keyframes fillunfill {\r\n            from {\r\n                stroke-dashoffset: 58.8 /* 2*RADIUS*PI * ARCSIZE/360 - 0.1 */\r\n                /* 0.1 a bit of a magic constant here */\r\n            }\r\n            50% {\r\n                stroke-dashoffset: 0;\r\n            }\r\n            to {\r\n                stroke-dashoffset: -58.4 /* -(2*RADIUS*PI * ARCSIZE/360 - 0.5) */\r\n                /* 0.5 a bit of a magic constant here */\r\n            }\r\n        }\r\n        @-moz-keyframes fillunfill {\r\n            from {\r\n                stroke-dashoffset: 58.8 /* 2*RADIUS*PI * ARCSIZE/360 - 0.1 */\r\n                /* 0.1 a bit of a magic constant here */\r\n            }\r\n            50% {\r\n                stroke-dashoffset: 0;\r\n            }\r\n            to {\r\n                stroke-dashoffset: -58.4 /* -(2*RADIUS*PI * ARCSIZE/360 - 0.5) */\r\n                /* 0.5 a bit of a magic constant here */\r\n            }\r\n        }\r\n        @-webkit-keyframes rot {\r\n            from {\r\n                -webkit-transform: rotate(0deg);\r\n            }\r\n            to {\r\n                -webkit-transform: rotate(-360deg);\r\n            }\r\n        }\r\n        @-moz-keyframes rot {\r\n            from {\r\n                -webkit-transform: rotate(0deg);\r\n            }\r\n            to {\r\n                -webkit-transform: rotate(-360deg);\r\n            }\r\n        }\r\n        @-moz-keyframes colors {\r\n            0% {\r\n                stroke: #4285F4;\r\n            }\r\n            25% {\r\n                stroke: #DE3E35;\r\n            }\r\n            50% {\r\n                stroke: #F7C223;\r\n            }\r\n            75% {\r\n                stroke: #1B9A59;\r\n            }\r\n            100% {\r\n                stroke: #4285F4;\r\n            }\r\n        }\r\n\r\n        @-webkit-keyframes colors {\r\n            0% {\r\n                stroke: #4285F4;\r\n            }\r\n            25% {\r\n                stroke: #DE3E35;\r\n            }\r\n            50% {\r\n                stroke: #F7C223;\r\n            }\r\n            75% {\r\n                stroke: #1B9A59;\r\n            }\r\n            100% {\r\n                stroke: #4285F4;\r\n            }\r\n        }\r\n\r\n        @keyframes colors {\r\n            0% {\r\n                stroke: #4285F4;\r\n            }\r\n            25% {\r\n                stroke: #DE3E35;\r\n            }\r\n            50% {\r\n                stroke: #F7C223;\r\n            }\r\n            75% {\r\n                stroke: #1B9A59;\r\n            }\r\n            100% {\r\n                stroke: #4285F4;\r\n            }\r\n        }\r\n        .qp-circular-loader-path {\r\n            -webkit-animation-name: fillunfill, rot, colors;\r\n            -webkit-animation-duration: 1333ms, 5332ms, 5332ms; /* ARCTIME, 4*ARCTIME, 4*ARCTIME */\r\n            -webkit-animation-iteration-count: infinite, infinite, infinite;\r\n            -webkit-animation-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1), steps(4), linear;\r\n            -webkit-animation-play-state: running, running, running;\r\n            -webkit-animation-fill-mode: forwards;\r\n\r\n            -moz-animation-name: fillunfill, rot, colors;\r\n            -moz-animation-duration: 1333ms, 5332ms, 5332ms; /* ARCTIME, 4*ARCTIME, 4*ARCTIME */\r\n            -moz-animation-iteration-count: infinite, infinite, infinite;\r\n            -moz-animation-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1), steps(4), linear;\r\n            -moz-animation-play-state: running, running, running;\r\n            -moz-animation-fill-mode: forwards;\r\n        }\r\n\r\n    </style>\r\n\r\n    <!-- 3= STROKEWIDTH -->\r\n    <!-- 14= RADIUS + STROKEWIDTH/2 -->\r\n    <!-- 12.5= RADIUS -->\r\n    <!-- 1.5=  STROKEWIDTH/2 -->\r\n    <!-- ARCSIZE would affect the 1.5,14 part of this... 1.5,14 is specific to\r\n         270 degress -->\r\n    <g class="qp-circular-loader">\r\n        <path class="qp-circular-loader-path" fill="none" d="M 14,1.5 A 12.5,12.5 0 1 1 1.5,14" stroke-width="3" stroke-linecap="round"/>\r\n    </g>\r\n</svg>'),e.put("noAvailableHours.html",'<span class="angular-reservation-noAvailableHours">{{"noAvailableHours" | translate}}</span>')}]);